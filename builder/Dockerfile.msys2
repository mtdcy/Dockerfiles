# syntax=docker/dockerfile:1
ARG BASEIMAGE=mtdcy/baseimage:msys2-latest

FROM ${BASEIMAGE}

# labels
LABEL maintainer="mtdcy.chen@gmail.com"

# workflows OCI runtime exec ignores our entrypoint
SHELL ["/bin/bash", "-c"]
RUN echo "**** install essentials ****" && \
        export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y git nodejs && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/* /var/tmp/* /var/log/*

# install packages
ARG MSYSTEM=MINGW64
ENV MSYSTEM=${MSYSTEM}
SHELL ["/usr/bin/wine", "bash.exe", "-c"]
RUN \
    case "$MSYSTEM" in \
        MINGW*)     prefix=mingw-w64-$(uname -m)- ;; \
        UCRT*)      prefix=mingw-w64-ucrt-$(uname -m)- ;; \
        CLANG*)     prefix=mingw-w64-clang-$(uname -m)- ;; \
    esac && \
    echo "**** install essentials ****" && \
        pacman -Sy && \
        pacman --noconfirm --ignore pacman --needed -S \
            wget curl git diffutils findutils ncurses \
            tar gzip xz lzip unzip zstd \
            patch gettext \
            bison flex lua perl perl-HTTP-Daemon \
            python3 moreutils rsync ccache \
            ${prefix}toolchain \
            ${prefix}autotools \
            ${prefix}nasm \
            ${prefix}yasm \
            ${prefix}cmake \
            ${prefix}meson \
            ${prefix}ntldd \
            ${prefix}nodejs \
            && \
        rm -rf /var/cache/pacman/pkg/*
# make => unix syntax and paths
# mingw32-make => windows syntax and paths

SHELL ["/bin/bash", "-c"]
RUN \
    echo "**** prepare user buildbot ****" && \
        useradd -U -m -s /bin/bash buildbot && \
        chown buildbot:buildbot /wine && \
        chown -R buildbot:buildbot /msys64 && \
        su buildbot -c "wine bash.exe -l -c ''"

# ccache: disable by default
ENV USE_CCACHE=0
ENV CCACHE_UMASK=022
ENV CCACHE_DIR=

# override entrypoint
COPY --chmod=0755 entrypoint-msys2.sh /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

ENV BUILDER_NAME=cmdlets-builder:msys2
