name: Build and Push

on:
  push:
    paths:
      - baseimage/**
      - nginx/**
      - nginx-ui/**
      - socks5/**
      - .github/workflows/build-push.yml

jobs:
  build-docker-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: https://git.mtdcy.top/actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: https://git.mtdcy.top/actions/docker-setup-buildx@v3

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: https://git.mtdcy.top/actions/docker-setup-buildx@v3
        with:
          buildkitd-config-inline: |
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["${{ vars.LOCAL_REGISTRY }}:5050"]
            [registry."ghcr.io"]
              mirrors = ["${{ vars.LOCAL_REGISTRY }}:5051"]
            [registry."lscr.io"]
              mirrors = ["${{ vars.LOCAL_REGISTRY }}:5052"]

      - name: Build and Push (baseimage)
        uses: https://git.mtdcy.top/actions/docker-build-push@v6
        env:
          PROJECT: baseimage
          BASEIMAGE: ubuntu:24.04
        with:
          context: ${{ env.PROJECT }}
          push: true
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:latest
          file: ${{ env.PROJECT }}/Dockerfile
          build-args: |
            BASEIMAGE=${{ env.BASEIMAGE }}
            MIRROR=${{ vars.MIRRORS }}
            TZ=${{ vars.TZ }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache,mode=max

      - name: Build and Push (nginx)
        uses: https://git.mtdcy.top/actions/docker-build-push@v6
        env:
          PROJECT: nginx
          BASEIMAGE: ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:latest
        with:
          context: ${{ env.PROJECT }}
          push: true
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:latest
          file: ${{ env.PROJECT }}/Dockerfile
          build-args: |
            BASEIMAGE=${{ env.BASEIMAGE }}
            MIRROR=${{ vars.MIRRORS }}
            TZ=${{ vars.TZ }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache,mode=max

      - name: Build and Push (nginx-ui)
        uses: https://git.mtdcy.top/actions/docker-build-push@v6
        env:
          PROJECT: nginx-ui
          BASEIMAGE: ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/nginx:latest
        with:
          context: ${{ env.PROJECT }}
          push: true
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:latest
          file: ${{ env.PROJECT }}/Dockerfile
          build-args: |
            BASEIMAGE=${{ env.BASEIMAGE }}
            MIRROR=${{ vars.MIRRORS }}
            TZ=${{ vars.TZ }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache,mode=max

      - name: Build and Push (socks5)
        uses: https://git.mtdcy.top/actions/docker-build-push@v6
        env:
          PROJECT: socks5
          BASEIMAGE: alpine:3
        with:
          context: ${{ env.PROJECT }}
          push: true
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:latest
          file: ${{ env.PROJECT }}/Dockerfile
          build-args: |
            BASEIMAGE=${{ env.BASEIMAGE }}
            MIRROR=${{ vars.MIRRORS }}
            TZ=${{ vars.TZ }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache,mode=max
