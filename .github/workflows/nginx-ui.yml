name: Build nginx-ui

on:
  push:
    paths:
      - nginx-ui/Dockerfile
      - .github/workflows/nginx-ui.yml

# workflows_run:
#   workflows: [Build nginx]
#   types:
#     - completed

  workflow_call:

  workflow_dispatch:

jobs:
  build-nginx-ui:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts:
            network=host
          cleanup: true

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts:
            network=host
          cleanup: true
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Inspect
        id: inspect
        run: |
          docker buildx inspect

          bash --version
          tags() {
            IFS='=' read -r _ v <<< "$(grep 'VERSION=' $1/Dockerfile)"
            IFS='.' read -r m n r <<< "$v"
            t=(
              ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/$1:latest
              ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/$1:$m
              ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/$1:$m.$n
            )
            [ -n "$r" ] && t+=(
              ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/$1:$m.$n.$r
            )
            echo "tags=$(tr ' ' ',' <<< "${t[*]}")" | tee -a $GITHUB_OUTPUT
          }

          tags nginx-ui

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: nginx-ui
          push: true
          tags: ${{ steps.inspect.outputs.tags }}
          file: nginx-ui/Dockerfile
          build-args: |
            BASEIMAGE=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/nginx:latest
            MIRROR=${{ vars.MIRRORS }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/nginx-ui:buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/nginx-ui:buildcache,mode=max
