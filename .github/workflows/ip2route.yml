---
name: Build ip2route

env:
  version: 1.0.3

on:
  push:
    paths:
      - .github/workflows/ip2route.yml

# workflows_run:
#   workflows: [Build baseimage-alpine]
#   types:
#     - completed

  workflow_call: null

  workflow_dispatch: null

jobs:
  build-ip2route:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Login
        env:
          password: ${{ secrets.REGISTRY_TOKEN }}
        if: ${{ env.password != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: docker/setup-buildx-action@v3

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Inspect
        id: inspect
        run: |
          docker buildx inspect

          bash --version
          tags() {
            IFS='.' read -r m n r <<< "${{ env.version }}"
            t=(
              ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/$1:latest
              ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/$1:$m
              ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/$1:$m.$n
            )
            [ -n "$r" ] && t+=(
              ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/$1:$m.$n.$r
            )
            echo "tags=$(tr ' ' ',' <<< "${t[*]}")" | tee -a $GITHUB_OUTPUT
          }

          tags ip2route

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          push: ${{ vars.PUSH_REGISTRY }}
          context: ip2route
          file: ip2route/Dockerfile
          build-contexts: |
            baseimage:latest=docker-image://${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu-latest
          tags: ${{ steps.inspect.outputs.tags }}
          build-args: VERSION=${{ env.version }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/ip2route:buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/ip2route:buildcache,mode=max
