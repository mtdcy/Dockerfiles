name: Build builder-alpine

on:
  push:
    paths:
      - builder/Dockerfile.alpine
      - .github/workflows/builder-alpine.yml

# workflows_run:
#   workflows: [Build baseimage-alpine]
#   types:
#     - completed

  workflow_call:

jobs:
  build-builder-alpine:
    runs-on: ubuntu-latest
    env:
      PROJECT: builder
      file: Dockerfile.alpine

    steps:
      - name: Checkout
        uses: https://git.mtdcy.top/actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: https://git.mtdcy.top/actions/docker-setup-buildx@v3
        with:
          driver-opts:
            network=host
          cleanup: true

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: https://git.mtdcy.top/actions/docker-setup-buildx@v3
        with:
          driver-opts:
            network=host
          cleanup: true
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Inspect
        id: inspect
        shell: bash
        run: |
          docker buildx inspect
          bash --version
          set -x

          # ARG BASEIMAGE=alpine:3
          IFS='=:' read -r _ base ver <<< "$(grep 'BASEIMAGE=' ${{ env.PROJECT }}/${{ env.FILE }})"
          # ARG REVISION=1
          IFS='='  read -r _ rev      <<< "$(grep 'REVISION='  ${{ env.PROJECT }}/${{ env.FILE }})"
          tags=(
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:$base-latest
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:$base-$ver
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:$base-$ver-${rev:-1}
          )
          echo "tags=$(tr ' ' ',' <<< "${tags[*]}")" | tee -a $GITHUB_OUTPUT

      - name: Build and Push
        uses: https://git.mtdcy.top/actions/docker-build-push@v6
        with:
          context: ${{ env.PROJECT }}
          push: true
          tags: ${{ steps.inspect.outputs.tags }}
          file: ${{ env.PROJECT }}/${{ env.FILE }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/${{ env.PROJECT }}:buildcache,mode=max
