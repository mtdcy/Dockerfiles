---
name: docker buildx job

on:
  workflow_call:
    inputs:
      runner:
        description: 'runs-on which runner'
        required: false
        type: string
        default: 'ubuntu-latest'
      platforms:
        description: 'build for platforms'
        required: false
        type: string
      context:
        description: 'where to start docker buildx'
        required: false
        type: string
        default: '.'
      dockerfile:
        description: 'path to Dockerfile'
        required: false
        type: string
      baseimage:
        description: 'FROM which baseimage'
        required: false
        type: string
        default: 'ubuntu:latest'
      tag:
        description: 'image name with tag'
        required: true
        type: string
      args:
        description: 'for --build-arg'
        required: false
        type: string

    secrets:
      REGISTRY_TOKEN:
        required: false

env:
  platforms: linux/amd64,linux/arm64

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login
        env:
          password: ${{ secrets.REGISTRY_TOKEN }}
        if: ${{ env.password != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: docker/setup-buildx-action@v3

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platforms }}
          provenance: false
          sbom: false
          build-contexts: |
            ubuntu:latest=docker-image://${{ inputs.baseimage }}
            baseimage:latest=docker-image://${{ inputs.baseimage }}
          tags: ${{ inputs.tag }}
          build-args: |
            ${{ inputs.args }}
          cache-from: type=registry,ref=${{ inputs.tag }}-cache
          cache-to: type=registry,ref=${{ inputs.tag }}-cache,mode=max
