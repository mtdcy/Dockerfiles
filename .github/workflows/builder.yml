---
name: Build builder

on:
  push:
    paths:
      - builder/Dockerfile
      - builder/entrypoint.sh
      - builder/Implib.so
      - .github/workflows/builder.yml

# workflows_run:
#   workflows: [Build baseimage]
#   types:
#     - completed

  workflow_call: null

  workflow_dispatch: null

jobs:
  build-builder:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login
        env:
          password: ${{ secrets.REGISTRY_TOKEN }}
        if: ${{ env.password != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: docker/setup-buildx-action@v3

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Build and Push (ubuntu-22.04)
        uses: docker/build-push-action@v6
        with:
          push: ${{ vars.PUSH_REGISTRY }}
          context: builder
          file: builder/Dockerfile
          platforms: linux/${{ matrix.arch }}
          build-contexts: |
            baseimage:latest=docker-image://${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu-22.04
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.arch }}-ubuntu-latest
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.arch }}-ubuntu-22.04
          build-args: |
            MIRROR=${{ vars.MIRRORS }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.arch }}-ubuntu-22.04-cache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.arch }}-ubuntu-22.04-cache,mode=max

      - name: Build and Push (alpine-3)
        uses: docker/build-push-action@v6
        with:
          push: ${{ vars.PUSH_REGISTRY }}
          context: builder
          file: builder/Dockerfile
          platforms: linux/${{ matrix.arch }}
          build-contexts: |
            baseimage:latest=docker-image://${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:alpine-3
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.arch }}-alpine-latest
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.arch }}-alpine-3
          build-args: |
            MIRROR=${{ vars.MIRRORS }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.arch }}-alpine-3-cache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.arch }}-alpine-3-cache,mode=max
