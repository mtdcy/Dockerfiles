---
name: Build builder-msys2

on:
  push:
    paths:
      - builder/Dockerfile.msys2
      - builder/entrypoint-msys2.sh
      - .github/workflows/builder-msys2.yml

# workflows_run:
#   workflows: [Build baseimage-alpine]
#   types:
#     - completed

  workflow_call: null

  workflow_dispatch: null

jobs:
  build-builder-msys2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        msystem:
          - mingw64
          - clang64
          - ucrt64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Login
        env:
          login_enabled: ${{ secrets.REGISTRY_TOKEN != '' }}
        if: ${{ env.login_enabled }}
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
          cleanup: true

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
          cleanup: true
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Prepare
        id: prepare
        shell: bash
        run: |
          set -x

          # msystem => upper case
          msystem=$(tr 'a-z' 'A-Z' <<< "${{ matrix.msystem }}")
          echo "MSYSTEM=$msystem" >> "$GITHUB_OUTPUT"

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: builder
          push: true
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.msystem }}-latest
          file: builder/Dockerfile.msys2
          build-args: |
            MSYSTEM=${{ steps.prepare.outputs.MSYSTEM }}
            BASEIMAGE=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:msys2-latest
            MIRROR=${{ vars.MIRRORS }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.msystem }}-buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.msystem }}-buildcache,mode=max
