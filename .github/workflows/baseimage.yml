---
name: Build baseimage

on:
  push:
    paths:
      - baseimage/Dockerfile
      - baseimage/Dockerfile.wine
      - baseimage/Dockerfile.msys2
      - baseimage/wine/**
      - baseimage/msys2
      - .github/workflows/baseimage.yml

  workflow_dispatch: null

env:
  platforms: linux/amd64,linux/arm64
  ubuntu: 24.04
  alpine: 3
  msys2: 20250830
  wine_url: https://gitlab.winehq.org/jhol/wine.git
  wine_tag: msys2-hacks-21

jobs:
  build-baseimage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login
        env:
          password: ${{ secrets.REGISTRY_TOKEN }}
        if: ${{ env.password != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: docker/setup-buildx-action@v3

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: docker/setup-buildx-action@v3
        with:
          cleanup: true
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Build and Push (ubuntu-latest)
        uses: docker/build-push-action@v6
        with:
          push: ${{ vars.PUSH_REGISTRY }}
          context: baseimage
          file: baseimage/Dockerfile
          platforms: ${{ env.platforms }}
          build-contexts: |
            ubuntu:latest=docker-image://ubuntu:${{ env.ubuntu }}
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu-latest
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu-${{ env.ubuntu }}
          build-args: |
            MIRROR=${{ vars.MIRRORS }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu-buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu-buildcache,mode=max

      - name: Build and Push (ubuntu-22.04)
        uses: docker/build-push-action@v6
        with:
          push: ${{ vars.PUSH_REGISTRY }}
          context: baseimage
          file: baseimage/Dockerfile
          platforms: ${{ env.platforms }}
          build-contexts: |
            ubuntu:latest=docker-image://ubuntu:22.04
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu-22.04
          build-args: |
            MIRROR=${{ vars.MIRRORS }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu2204-buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu2204-buildcache,mode=max

      - name: Build and Push (alpine-latest)
        uses: docker/build-push-action@v6
        with:
          push: ${{ vars.PUSH_REGISTRY }}
          context: baseimage
          file: baseimage/Dockerfile
          platforms: ${{ env.platforms }}
          build-contexts: |
            ubuntu:latest=docker-image://alpine:${{ env.alpine }}
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:alpine-latest
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:alpine-${{ env.alpine }}
          build-args: |
            MIRROR=${{ vars.MIRRORS }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:alpine-buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:alpine-buildcache,mode=max

      - name: Build and Push (wine-latest)
        uses: docker/build-push-action@v6
        with:
          push: ${{ vars.PUSH_REGISTRY }}
          context: baseimage
          file: baseimage/Dockerfile.wine
          # only amd64
          platforms: linux/amd64
          build-contexts: |
            ubuntu:latest=docker-image://${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:ubuntu-latest
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:wine-latest
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:wine-${{ env.wine_tag }}
          build-args: |
            MIRROR=${{ vars.MIRRORS }}
            WINE_REPO=${{ env.wine_url }}#${{ env.wine_tag }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:wine-buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:wine-buildcache,mode=max

      - name: Build and Push (msys2-latest)
        uses: docker/build-push-action@v6
        with:
          push: ${{ vars.PUSH_REGISTRY }}
          context: baseimage
          file: baseimage/Dockerfile.msys2
          # only amd64
          platforms: linux/amd64
          build-contexts: |
            ubuntu:latest=docker-image://${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:wine-${{ env.wine_tag }}
          tags: |
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:msys2-latest
            ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:msys2-${{ env.msys2 }}
          build-args: |
            MIRROR=${{ vars.MIRRORS }}
            MSYS2_VERSION=${{ env.msys2 }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:msys2-buildcache
          cache-to: type=registry,ref=${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/baseimage:msys2-buildcache,mode=max
