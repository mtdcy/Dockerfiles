# syntax=docker/dockerfile:1
FROM baseimage:latest

# labels
LABEL maintainer="mtdcy.chen@gmail.com"

ARG NGX_VER=1.29.2
ARG NGX_UI_VER=2.1.17

ARG CACHEBUST=1
ARG TARGETPLATFORM

COPY rootfs/ /

SHELL ["bash", "-c"]
RUN <<-EOS
    set -ex
    echo "**** install nginx runtimes ****"

    if which apt-get; then
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y cron logrotate goaccess
        apt-get autoremove
        apt-get clean
        rm -rf /var/lib/apt/lists/*
    else
        apk update
        apk add --no-cache cronie logrotate goaccess
    fi

    # goaccess: share the same conf dir with nginx
    mv /etc/goaccess/* /etc/nginx/ || true
    rm -rf /etc/goaccess || true

    # no default crontab for logrotate
    rm -rf /etc/cron.*

    # alpine has different crontab names
    which crond && ln -sfv $(which crond) /usr/sbin/cron || true

    set -ex
    echo "**** prepare nginx ****"
    if curl -fsSL --connect-timeout 3 http://git.mtdcy.top -o /dev/null; then
        bash -c "$(curl -fsSL http://git.mtdcy.top/mtdcy/cmdlets/raw/branch/main/cmdlets.sh)" install
    else
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/mtdcy/cmdlets/main/cmdlets.sh)" install
    fi

    cmdlets.sh install nginx@$NGX_VER

    echo "**** prepare nginx-ui ****"

    TARGET="linux-64"
    case "$TARGETPLATFORM" in
        linux/arm64)    TARGET=linux-arm64-v8a ;;
    esac

    curl -sL https://github.com/0xJacky/nginx-ui/releases/download/v$NGX_UI_VER/nginx-ui-${TARGET,,}.tar.gz | tar -C /usr/bin/ -xz nginx-ui

    echo "**** finish ****"

    # fails on alpine
    ldconfig || true

    nginx -V
    nginx-ui -version

    mv /etc/nginx /etc/nginx.default

    mkdir -pv /var/www/html
    rm -fv /var/www/html/* || true
    cp -fv /etc/nginx.default/index.html /var/www/html/

    # add user if not exists
    groupadd www-data || true
    useradd -g www-data -m -s /sbin/nologin www-data || true
EOS

# 8080 for mgmt, 7890 for goaccess
EXPOSE  80 443 8080 7890

VOLUME /etc/nginx
VOLUME /var/www/html
VOLUME /var/log

ENTRYPOINT ["/entrypoint.sh"]

# vim:ft=dockerfile
